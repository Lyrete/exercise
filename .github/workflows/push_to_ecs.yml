name: Deploy to ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{vars.AWS_REGION}}
  ECR_REPOSITORY: ${{vars.ECR_REPO}} # set this to your Amazon ECR repository name
  ECS_SERVICE: ${{vars.ECS_SERVICE}}
  ECS_CLUSTER: ${{vars.AWS_ECS_CLUSTER}} # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: ./data/ecs_task.json # set this to the path to your Amazon ECS task definition
  CONTAINER_NAME: service # set this to the name of the container in the

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{vars.ROLE}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build and push image
        id: build-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
